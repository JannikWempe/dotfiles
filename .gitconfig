[user]
	name = Jannik Wempe
	email = jannik@wempe.dev

[credential]
	# helper = cache --timeout=600
	helper = osxkeychain

[core]
	autocrlf = false
	safecrlf = false
	excludesfile = ~/.gitignore_global
	editor = code --wait
	pager = delta

[rebase]
	# Automatically stash before a rebase and unstash afterwards.
	autoStash = true

[pull]
	rebase = true

[alias]
	### helpers
	# Get the current branch name (not so useful in itself, but used in other aliases)
	bname = !git rev-parse --abbrev-ref HEAD
	# Get folders with changed files in it
	cdirs = !git diff --dirstat=files,0 | awk -F ' ' '{print $2}'

	# shortcuts
	a = add
	aa = add -A .
	as = !git ls-files -m -o --exclude-standard | fzf -m --print0 | xargs -0 -o -t git add # fuzzy search file(s) for adding

	cl = clone

	co = checkout
	cob = checkout -b
	cosb = !git branch | fzf | xargs git checkout && git fetch origin # checkout search branch
	# undoing
	uf = !git ls-files -m | fzf -m --print0 | xargs -0 -o -t git checkout # undo file(s)
	ud = !git cdirs | fzf -m --print0 | xargs -0 -o -t git checkout # undo director(y/ies)

	cm = commit
	cmm = commit -m
	cma = commit --amend

	aacmm = !git add -A . && git commit -m

	d = diff

	po = push origin
	pf = push --force-with-lease
	# Push the current branch to the remote "origin", and set it to track the upstream branch
	pub = !git push -u origin $(git bname)
	# Delete remote branch
	pd = push --delete origin

	f = fetch
	pl = pull origin

	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	sl = stash list
	sa = stash apply
	sp = stash pop
	ss = stash save

	st = status -sb

	br = branch
	brd = !git branch | fzf | xargs -t git branch -D # delete local branch

	# Prettify log
	lg = log --graph --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	h = log --graph --date=short --all --pretty=format:"%C(auto)%h %ad (%cr) %s%d [%Cgreen %an %Creset]"

	# amend to last commit w/o editing commit msg
	amend = !git add -A && git commit --amend --no-edit

	# Pull latest changes and sync current branch with remote
	# sync = !git fetch --prune && git pull
	sync = git pull --rebase --prune
	# "reFRESH": Include latest changes from base branch and rebase current branch on top of it
	# ex: git fresh <base branch>
	fresh = "!f() { git switch $1 && git pull && git switch - && git rebase $1; };f"

	# Make a quick commit with WIP(work in progress) message and bypass the pre-commit and commit-msg hooks
	wip = !git add --all && git commit -m "WIP" --no-verify

	# after a rebase: resets the dates to the author date in order to appear in chronological order
	redate = rebase --committer-date-is-author-date

	# undo last commit and keep it's commited file in staging area
	uncommit = reset --soft HEAD^

	# List all aliases
	la = !git config -l | grep alias | cut -c 7-
	alias = config --get-regexp ^alias\\.

	# -- Comparisons --
	new = lg main..HEAD
	missing = lg HEAD..main

[gpg "x509"]
	program = smimesign
[gpg]
	format = x509
# Save resolved conflicts so they can be reused later
[rerere]
	# autoupdate = true
	enabled = true
[init]
	defaultBranch = main


[includeIf "gitdir/i:~/Code/hashnode/"]
	path = ~/.gitconfig-hashnode